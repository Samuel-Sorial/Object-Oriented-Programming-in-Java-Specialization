#BlueJ class context
comment0.target=ColdestDay
comment0.text=\r\n\ Write\ a\ description\ of\ ColdestDay\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=void\ coldestFile()
comment10.params=
comment10.target=void\ testColdestHourDay()
comment11.params=coldestRec\ record\ filter
comment11.target=boolean\ whichSmaller(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ java.lang.String)
comment12.params=parser
comment12.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment13.params=
comment13.target=void\ testHumidity()
comment2.params=filter\ dr
comment2.target=void\ lowestFile(java.lang.String,\ edu.duke.DirectoryResource)
comment3.params=
comment3.target=void\ lowestHumidityFiles()
comment4.params=parser
comment4.target=double\ averageTemperature(org.apache.commons.csv.CSVParser)
comment5.params=
comment5.target=void\ testavg()
comment6.params=parser\ value
comment6.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment7.params=
comment7.target=void\ testaveragetemp()
comment8.params=fr
comment8.target=void\ printAllTemperatures(edu.duke.FileResource)
comment9.params=parser
comment9.target=org.apache.commons.csv.CSVRecord\ coldestHour(org.apache.commons.csv.CSVParser)
numComments=14
